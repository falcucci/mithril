"use strict";(self.webpackChunkmithril_doc=self.webpackChunkmithril_doc||[]).push([[7943,5569,5458],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>k});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),s=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},d=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},m="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,p=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),m=s(a),c=n,k=m["".concat(p,".").concat(c)]||m[c]||u[c]||i;return a?r.createElement(k,l(l({ref:e},d),{},{components:a})):r.createElement(k,l({ref:e},d))}));function k(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[m]="string"==typeof t?t:n,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},85162:(t,e,a)=>{a.d(e,{Z:()=>l});var r=a(67294),n=a(86010);const i={tabItem:"tabItem_Ymn6"};function l(t){let{children:e,hidden:a,className:l}=t;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(i.tabItem,l),hidden:a},e)}},74866:(t,e,a)=>{a.d(e,{Z:()=>w});var r=a(87462),n=a(67294),i=a(86010),l=a(12466),o=a(16550),p=a(91980),s=a(67392),d=a(50012);function m(t){return function(t){return n.Children.map(t,(t=>{if(!t||(0,n.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(t).map((t=>{let{props:{value:e,label:a,attributes:r,default:n}}=t;return{value:e,label:a,attributes:r,default:n}}))}function u(t){const{values:e,children:a}=t;return(0,n.useMemo)((()=>{const t=e??m(a);return function(t){const e=(0,s.l)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,a])}function c(t){let{value:e,tabValues:a}=t;return a.some((t=>t.value===e))}function k(t){let{queryString:e=!1,groupId:a}=t;const r=(0,o.k6)(),i=function(t){let{queryString:e=!1,groupId:a}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:e,groupId:a});return[(0,p._X)(i),(0,n.useCallback)((t=>{if(!i)return;const e=new URLSearchParams(r.location.search);e.set(i,t),r.replace({...r.location,search:e.toString()})}),[i,r])]}function h(t){const{defaultValue:e,queryString:a=!1,groupId:r}=t,i=u(t),[l,o]=(0,n.useState)((()=>function(t){let{defaultValue:e,tabValues:a}=t;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!c({value:e,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${a.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=a.find((t=>t.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:e,tabValues:i}))),[p,s]=k({queryString:a,groupId:r}),[m,h]=function(t){let{groupId:e}=t;const a=function(t){return t?`docusaurus.tab.${t}`:null}(e),[r,i]=(0,d.Nk)(a);return[r,(0,n.useCallback)((t=>{a&&i.set(t)}),[a,i])]}({groupId:r}),g=(()=>{const t=p??m;return c({value:t,tabValues:i})?t:null})();(0,n.useLayoutEffect)((()=>{g&&o(g)}),[g]);return{selectedValue:l,selectValue:(0,n.useCallback)((t=>{if(!c({value:t,tabValues:i}))throw new Error(`Can't select invalid tab value=${t}`);o(t),s(t),h(t)}),[s,h,i]),tabValues:i}}var g=a(72389);const N={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(t){let{className:e,block:a,selectedValue:o,selectValue:p,tabValues:s}=t;const d=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.o5)(),u=t=>{const e=t.currentTarget,a=d.indexOf(e),r=s[a].value;r!==o&&(m(e),p(r))},c=t=>{let e=null;switch(t.key){case"Enter":u(t);break;case"ArrowRight":{const a=d.indexOf(t.currentTarget)+1;e=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(t.currentTarget)-1;e=d[a]??d[d.length-1];break}}e?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},e)},s.map((t=>{let{value:e,label:a,attributes:l}=t;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:o===e?0:-1,"aria-selected":o===e,key:e,ref:t=>d.push(t),onKeyDown:c,onClick:u},l,{className:(0,i.Z)("tabs__item",N.tabItem,l?.className,{"tabs__item--active":o===e})}),a??e)})))}function b(t){let{lazy:e,children:a,selectedValue:r}=t;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(e){const t=i.find((t=>t.props.value===r));return t?(0,n.cloneElement)(t,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},i.map(((t,e)=>(0,n.cloneElement)(t,{key:e,hidden:t.props.value!==r}))))}function y(t){const e=h(t);return n.createElement("div",{className:(0,i.Z)("tabs-container",N.tabList)},n.createElement(f,(0,r.Z)({},t,e)),n.createElement(b,(0,r.Z)({},t,e)))}function w(t){const e=(0,g.Z)();return n.createElement(y,(0,r.Z)({key:String(e)},t))}},57977:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var r=a(87462),n=(a(67294),a(3905));const i={unlisted:!0,hide_title:!0,hide_table_of_contents:!0},l=void 0,o={unversionedId:"compiled-binaries",id:"version-maintained/compiled-binaries",title:"compiled-binaries",description:"Each Release / Pre-Release distribution comes with pre compiled binaries ready to use or wrapped in a debian package",source:"@site/versioned_docs/version-maintained/compiled-binaries.md",sourceDirName:".",slug:"/compiled-binaries",permalink:"/doc/compiled-binaries",draft:!1,editUrl:"https://github.com/input-output-hk/mithril/edit/main/docs/root/compiled-binaries.md",tags:[],version:"maintained",frontMatter:{unlisted:!0,hide_title:!0,hide_table_of_contents:!0}},p={},s=[],d={toc:s},m="wrapper";function u(t){let{components:e,...a}=t;return(0,n.kt)(m,(0,r.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Each Release / Pre-Release distribution comes with pre compiled binaries ready to use or wrapped in a debian package\nfor linux\xb9."),(0,n.kt)("p",null,"You can download them from the Release / Pre-Release distribution page that depends on the Mithril Network you\nare targeting."),(0,n.kt)("p",null,"These links are available in the ",(0,n.kt)("strong",{parentName:"p"},"Build From")," column of the above ",(0,n.kt)("strong",{parentName:"p"},"Mithril Networks")," table."),(0,n.kt)("p",null,"\xb9 The Linux binaries target ",(0,n.kt)("inlineCode",{parentName:"p"},"glibc"),", and have a minimum requirement of ",(0,n.kt)("inlineCode",{parentName:"p"},"glibc 2.31")," (compatible with ",(0,n.kt)("inlineCode",{parentName:"p"},"Ubuntu 20.04"),"\nor ",(0,n.kt)("inlineCode",{parentName:"p"},"Debian Bullseye"),")."))}u.isMDXComponent=!0},63345:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var r=a(87462),n=(a(67294),a(3905)),i=a(5892);a(57977);const l={sidebar_position:4},o="Mithril client library",p={unversionedId:"manual/developer-docs/nodes/mithril-client-library",id:"version-maintained/manual/developer-docs/nodes/mithril-client-library",title:"Mithril client library",description:"Mithril client library can be used by Rust developers to use the Mithril network in their applications.",source:"@site/versioned_docs/version-maintained/manual/developer-docs/nodes/mithril-client-library.md",sourceDirName:"manual/developer-docs/nodes",slug:"/manual/developer-docs/nodes/mithril-client-library",permalink:"/doc/manual/developer-docs/nodes/mithril-client-library",draft:!1,editUrl:"https://github.com/input-output-hk/mithril/edit/main/docs/root/manual/developer-docs/nodes/mithril-client-library.md",tags:[],version:"maintained",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docSideBar",previous:{title:"Mithril client node",permalink:"/doc/manual/developer-docs/nodes/mithril-client"},next:{title:"API references",permalink:"/doc/manual/developer-docs/references"}},s={},d=[{value:"Resources",id:"resources",level:2},{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Using Mithril client library",id:"using-mithril-client-library",level:2}],m={toc:d},u="wrapper";function c(t){let{components:e,...a}=t;return(0,n.kt)(u,(0,r.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"mithril-client-library"},"Mithril client library"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Mithril client library can be used by Rust developers to use the Mithril network in their applications."),(0,n.kt)("p",{parentName:"admonition"},"It is responsible for handling the different types of data certified by Mithril, and available through a Mithril aggregator:"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/doc/glossary#snapshot"},(0,n.kt)("strong",{parentName:"a"},"Snapshot")),": list, get and download tarball."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../../../glossary#stake-distribution"},(0,n.kt)("strong",{parentName:"a"},"Mithril stake distribution")),": list and get."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../../../glossary#certificate"},(0,n.kt)("strong",{parentName:"a"},"Certificate")),": list, get, and chain validation."))),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"For more information about the ",(0,n.kt)("strong",{parentName:"p"},"Mithril network"),", please see the ",(0,n.kt)("a",{parentName:"p",href:"/doc/mithril/mithril-network/architecture"},"architecture")," overview.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"For more information about the ",(0,n.kt)("strong",{parentName:"p"},"Mithril client")," node, please see ",(0,n.kt)("a",{parentName:"p",href:"/doc/mithril/mithril-network/client"},"this overview"),".")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Check out the ",(0,n.kt)("a",{parentName:"p",href:"/doc/manual/getting-started/bootstrap-cardano-node"},(0,n.kt)("inlineCode",{parentName:"a"},"Bootstrap a Cardano node"))," guide.")))),(0,n.kt)("admonition",{title:"Mithril networks",type:"note"},(0,n.kt)(i.default,{mdxType:"NetworksMatrix"})),(0,n.kt)("h2",{id:"resources"},"Resources"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Node"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Source repository"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Rust documentation"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"Mithril client")),(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("a",{parentName:"td",href:"https://github.com/input-output-hk/mithril/tree/main/mithril-client"},"\u2197\ufe0f")),(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("a",{parentName:"td",href:"https://mithril.network/mithril-client/doc/mithril_client/index.html"},"\u2197\ufe0f"))))),(0,n.kt)("h2",{id:"pre-requisites"},"Pre-requisites"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Install the latest stable version of the ",(0,n.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/learn/get-started"},"correctly configured")," Rust toolchain.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Install OpenSSL development libraries. For example, on Ubuntu/Debian/Mint, run ",(0,n.kt)("inlineCode",{parentName:"p"},"apt install libssl-dev")))),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,"In your project, use ",(0,n.kt)("inlineCode",{parentName:"p"},"cargo")," to add ",(0,n.kt)("a",{parentName:"p",href:"https://crates.io/crates/mithril-client"},"mithril-client")," crate as a dependency:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cargo add mithril-client\n")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Mithril client is an asynchronous library, you will need a runtime to execute your futures. We recommend to use the crate ",(0,n.kt)("a",{parentName:"p",href:"https://crates.io/crates/tokio"},"tokio"),", as the library has been tested with it.")),(0,n.kt)("h2",{id:"using-mithril-client-library"},"Using Mithril client library"),(0,n.kt)("p",null,"Below is a basic example of how to use most of the functions exposed by the Mithril client library:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="/src/main.rs"',title:'"/src/main.rs"'},'use mithril_client::{ClientBuilder, MessageBuilder};\nuse std::path::Path;\n\n#[tokio::main]\nasync fn main() -> mithril_client::MithrilResult<()> {\n    let client = ClientBuilder::aggregator("YOUR_AGGREGATOR_ENDPOINT", "YOUR_GENESIS_VERIFICATION_KEY").build()?;\n    \n    let snapshots = client.snapshot().list().await?;\n    \n    let last_digest = snapshots.first().unwrap().digest.as_ref();\n    let snapshot = client.snapshot().get(last_digest).await?.unwrap();\n    \n    let certificate = client\n        .certificate()\n        .verify_chain(&snapshot.certificate_hash)\n        .await?;\n    \n    // Note: the directory must already exist, and the user running this code must have read/write access to it.\n    let target_directory = Path::new("YOUR_TARGET_DIRECTORY");\n    client\n        .snapshot()\n        .download_unpack(&snapshot, target_directory)\n        .await?;\n    \n    let message = MessageBuilder::new()\n        .compute_snapshot_message(&certificate, target_directory)\n        .await?;\n    assert!(certificate.match_message(&message));\n    \n    Ok(())\n}\n')),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Snapshot download and certificate chain validation can take quite some time even with a fast computer and network. We have implemented a feedback mechanism for them, more details on it are available in the ",(0,n.kt)("a",{parentName:"p",href:"https://mithril.network/rust-doc/mithril_client/feedback/index.html"},"feedback sub-module"),"."),(0,n.kt)("p",{parentName:"admonition"},"An example of implementation with the crate ",(0,n.kt)("a",{parentName:"p",href:"https://crates.io/crates/indicatif"},"indicatif")," is available in the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/input-output-hk/mithril/tree/main/mithril-client/examples/snapshot_list_get_show_download_verify.rs"},"Mithril repository"),". To run it, execute the following command:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cargo run --example snapshot_list_get_show_download_verify --features fs\n"))),(0,n.kt)("p",null,"Here is a working example of the code using the configuration parameters of the ",(0,n.kt)("inlineCode",{parentName:"p"},"release-preprod")," network:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="/src/main.rs"',title:'"/src/main.rs"'},'use mithril_client::{ClientBuilder, MessageBuilder};\nuse std::path::Path;\n\n#[tokio::main]\nasync fn main() -> mithril_client::MithrilResult<()> {\n    let client = ClientBuilder::aggregator("https://aggregator.release-preprod.api.mithril.network/aggregator", "5b3132372c37332c3132342c3136312c362c3133372c3133312c3231332c3230372c3131372c3139382c38352c3137362c3139392c3136322c3234312c36382c3132332c3131392c3134352c31332c3233322c3234332c34392c3232392c322c3234392c3230352c3230352c33392c3233352c34345d").build()?;\n    \n    let snapshots = client.snapshot().list().await?;\n    \n    let last_digest = snapshots.first().unwrap().digest.as_ref();\n    let snapshot = client.snapshot().get(last_digest).await?.unwrap();\n    \n    let certificate = client\n        .certificate()\n        .verify_chain(&snapshot.certificate_hash)\n        .await?;\n    \n    // Note: the directory must already exist, and the user running this code must have read/write access to it.\n    let target_directory = Path::new(".");\n    client\n        .snapshot()\n        .download_unpack(&snapshot, target_directory)\n        .await?;\n    \n    let message = MessageBuilder::new()\n        .compute_snapshot_message(&certificate, target_directory)\n        .await?;\n    assert!(certificate.match_message(&message));\n    \n    Ok(())\n}\n')),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"You can read the complete ",(0,n.kt)("a",{parentName:"p",href:"https://mithril.network/rust-doc/mithril_client/index.html"},"developer documentation"),".")))}c.isMDXComponent=!0},5892:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>p,default:()=>k,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var r=a(87462),n=(a(67294),a(3905)),i=a(74866),l=a(85162);const o={unlisted:!0,hide_title:!0,hide_table_of_contents:!0},p=void 0,s={unversionedId:"networks-matrix",id:"version-maintained/networks-matrix",title:"networks-matrix",description:"Here is an updated list of all Mithril networks, including their configurations and current statuses:",source:"@site/versioned_docs/version-maintained/networks-matrix.md",sourceDirName:".",slug:"/networks-matrix",permalink:"/doc/networks-matrix",draft:!1,editUrl:"https://github.com/input-output-hk/mithril/edit/main/docs/root/networks-matrix.md",tags:[],version:"maintained",frontMatter:{unlisted:!0,hide_title:!0,hide_table_of_contents:!0}},d={},m=[{value:"<code>release-mainnet</code>",id:"release-mainnet",level:2},{value:"<code>release-preprod</code>",id:"release-preprod",level:2},{value:"<code>pre-release-preview</code>",id:"pre-release-preview",level:2},{value:"<code>testing-preview</code>",id:"testing-preview",level:2}],u={toc:m},c="wrapper";function k(t){let{components:e,...a}=t;return(0,n.kt)(c,(0,r.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Here is an updated list of all ",(0,n.kt)("strong",{parentName:"p"},"Mithril networks"),", including their configurations and current statuses:"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Last update: 07/21/2023")),(0,n.kt)(i.Z,{mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"mainnet",label:"Mainnet",default:!0,mdxType:"TabItem"},(0,n.kt)("h2",{id:"release-mainnet"},(0,n.kt)("inlineCode",{parentName:"h2"},"release-mainnet")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Information"),(0,n.kt)("th",{parentName:"tr",align:null},"-"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Mithril network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"release-mainnet"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"mainnet"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano magic id")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"-"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Supported")),(0,n.kt)("td",{parentName:"tr",align:null},"Yes \u2714\ufe0f")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Status")),(0,n.kt)("td",{parentName:"tr",align:null},"Beta \ud83d\udfe2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Aggregator endpoint")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://aggregator.release-mainnet.api.mithril.network/aggregator")," ",(0,n.kt)("a",{parentName:"td",href:"https://aggregator.release-mainnet.api.mithril.network/aggregator"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Genesis verification key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-mainnet/genesis.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-mainnet/genesis.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader adapter type")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"cardano-chain"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader address")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-mainnet/era.addr")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-mainnet/era.addr"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader verification key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-mainnet/era.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-mainnet/era.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Build from")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Latest release")," ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/input-output-hk/mithril/releases/latest"},"\u2197\ufe0f")))))),(0,n.kt)(l.Z,{value:"preprod",label:"Preprod",mdxType:"TabItem"},(0,n.kt)("h2",{id:"release-preprod"},(0,n.kt)("inlineCode",{parentName:"h2"},"release-preprod")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Information"),(0,n.kt)("th",{parentName:"tr",align:null},"-"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Mithril network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"release-preprod")," ",(0,n.kt)("a",{parentName:"td",href:"https://mithril.network/explorer?aggregator=https%3A%2F%2Faggregator.release-preprod.api.mithril.network%2Faggregator"},"\ud83d\udd0e"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"preprod"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano magic Id")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"1"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Supported")),(0,n.kt)("td",{parentName:"tr",align:null},"Yes \u2714\ufe0f")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Status")),(0,n.kt)("td",{parentName:"tr",align:null},"Release \ud83d\udfe2")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Aggregator endpoint")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://aggregator.release-preprod.api.mithril.network/aggregator")," ",(0,n.kt)("a",{parentName:"td",href:"https://aggregator.release-preprod.api.mithril.network/aggregator"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Genesis verification key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/genesis.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/genesis.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader adapter type")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"cardano-chain"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader address")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/era.addr")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/era.addr"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader verification key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/era.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/era.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Build from")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Latest release")," ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/input-output-hk/mithril/releases/latest"},"\u2197\ufe0f")))))),(0,n.kt)(l.Z,{value:"preview",label:"Preview",mdxType:"TabItem"},(0,n.kt)("h2",{id:"pre-release-preview"},(0,n.kt)("inlineCode",{parentName:"h2"},"pre-release-preview")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Information"),(0,n.kt)("th",{parentName:"tr",align:null},"-"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Mithril network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"pre-release-preview")," ",(0,n.kt)("a",{parentName:"td",href:"https://mithril.network/explorer?aggregator=https%3A%2F%2Faggregator.pre-release-preview.api.mithril.network%2Faggregator"},"\ud83d\udd0e"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"preview"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano magic Id")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"2"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Supported")),(0,n.kt)("td",{parentName:"tr",align:null},"Yes \u2714\ufe0f")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Status")),(0,n.kt)("td",{parentName:"tr",align:null},"Pre-release \ud83d\udfe0")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Aggregator endpoint")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://aggregator.pre-release-preview.api.mithril.network/aggregator")," ",(0,n.kt)("a",{parentName:"td",href:"https://aggregator.pre-release-preview.api.mithril.network/aggregator"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Genesis verification key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/genesis.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/genesis.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader adapter type")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"cardano-chain"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader address")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/era.addr")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/era.addr"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader verification key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/era.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/pre-release-preview/era.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Build from")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Latest pre-release")," ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/input-output-hk/mithril/releases?q=pre"},"\u2197\ufe0f"))))),(0,n.kt)("br",null),(0,n.kt)("h2",{id:"testing-preview"},(0,n.kt)("inlineCode",{parentName:"h2"},"testing-preview")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f For devs only")),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Information"),(0,n.kt)("th",{parentName:"tr",align:null},"-"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Mithril network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"testing-preview")," ",(0,n.kt)("a",{parentName:"td",href:"https://mithril.network/explorer?aggregator=https%3A%2F%2Faggregator.testing-preview.api.mithril.network%2Faggregator"},"\ud83d\udd0e"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano network")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"preview"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Cardano magic Id")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"2"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Supported")),(0,n.kt)("td",{parentName:"tr",align:null},"Yes \u2714\ufe0f")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Status")),(0,n.kt)("td",{parentName:"tr",align:null},"Unstable \ud83d\udd34")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Aggregator endpoint")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://aggregator.testing-preview.api.mithril.network/aggregator")," ",(0,n.kt)("a",{parentName:"td",href:"https://aggregator.testing-preview.api.mithril.network/aggregator"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Genesis verification key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/genesis.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/genesis.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader adapter type")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"cardano-chain"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader address")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/era.addr")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/era.addr"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Era reader verification key")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("inlineCode",{parentName:"td"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/era.vkey")," ",(0,n.kt)("a",{parentName:"td",href:"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/testing-preview/era.vkey"},"\u2197\ufe0f"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Build from")),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("strong",{parentName:"td"},"Main branch")," ",(0,n.kt)("a",{parentName:"td",href:"https://github.com/input-output-hk/mithril/tree/main"},"\u2197\ufe0f"))))))),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"In this documentation, we use the following generic identifiers:"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_CARDANO_NETWORK**")," You need to replace this with the name of the network that runs on your Cardano node (eg, ",(0,n.kt)("inlineCode",{parentName:"li"},"preprod"),")"),(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_AGGREGATOR_ENDPOINT**")," You need to replace this with the endpoint of an aggregator that runs on the Cardano network you are targeting (eg, ",(0,n.kt)("inlineCode",{parentName:"li"},"https://aggregator.release-preprod.api.mithril.network/aggregator"),")"),(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_GENESIS_VERIFICATION_KEY**")," You need to replace this with the genesis verification key URL that runs on the Cardano network you are targeting (eg, ",(0,n.kt)("inlineCode",{parentName:"li"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/mithril-infra/configuration/release-preprod/genesis.vkey"),")"),(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_ERA_READER_ADAPTER_TYPE**")," You need to replace this with the era reader adapter type used by the Mithril network you are targeting (eg, ",(0,n.kt)("inlineCode",{parentName:"li"},"cardano-chain"),")"),(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_ERA_READER_ADDRESS**")," You need to replace this with the era reader address URL used by the Mithril network you are targeting (eg, ",(0,n.kt)("inlineCode",{parentName:"li"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/address.addr"),")"),(0,n.kt)("li",{parentName:"ul"},"*",(0,n.kt)("strong",{parentName:"li"},"*YOUR_ERA_READER_VERIFICATION_KEY**")," You need to replace this with the era reader verification key URL used by the Mithril network you are targeting (eg, ",(0,n.kt)("inlineCode",{parentName:"li"},"https://raw.githubusercontent.com/input-output-hk/mithril/main/TEST_ONLY_era.vkey"),")"))))}k.isMDXComponent=!0}}]);