[package]
name = "mithril-client"
version = "0.5.7"
description = "Mithril client library"
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
categories = ["cryptography"]
include = ["**/*.rs", "Cargo.toml", "README.md", ".gitignore"]

[lib]
crate-type = ["lib", "cdylib", "staticlib"]

[[example]]
name = "snapshot_list_get_show_download_verify"
path = "examples/snapshot_list_get_show_download_verify.rs"
required-features = ["fs"]

[[test]]
name = "snapshot_list_get_show_download_verify"
path = "tests/snapshot_list_get_show_download_verify.rs"
required-features = ["fs"]

[dependencies]
anyhow = "1.0.75"
async-recursion = "1.0.5"
async-trait = "0.1.73"
chrono = { version = "0.4.31", features = ["serde"] }
flate2 = { version = "1.0.27", optional = true }
flume = { version = "0.11.0", optional = true }
futures = "0.3.28"
mithril-common = { path = "../mithril-common", version = "0.2" }
reqwest = { version = "0.11.22", features = ["json", "stream"] }
semver = "1.0.19"
serde = { version = "1.0.188", features = ["derive"] }
serde_json = "1.0.107"
slog = "2.7.0"
tar = { version = "0.4.40", optional = true }
thiserror = "1.0.49"
tokio = { version = "1.32.0", features = ["sync"] }
uuid = { version = "1.5.0", features = ["v4"] }
zstd = { version = "0.13.0", optional = true }

[dev-dependencies]
httpmock = "0.6.8"
indicatif = { version = "0.17.7", features = ["tokio"] }
mithril-common = { path = "../mithril-common", version = "0.2.133", features = [
    "test_http_server",
] }
mockall = "0.11.4"
slog-async = "2.8.0"
slog-scope = "4.4.0"
slog-term = "2.9.0"
tokio = { version = "1.32.0", features = ["macros", "rt"] }
warp = "0.3"

[features]
# Include nothing by default
# TODO: rollback to default = []
default = ["full"]
full = ["fs"]
# Enable file system releated functionnality, right now that mean ony snapshot download
fs = ["flate2", "flume", "tar", "tokio/rt", "zstd"]
portable = ["mithril-common/portable"]

[package.metadata.docs.rs]
all-features = true
# enable unstable features in the documentation
rustdoc-args = ["--cfg", "docsrs"]
